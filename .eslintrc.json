{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:react/recommended",
    "next/core-web-vitals",
    "next/typescript"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "sql", "ban-councillor-typo"],
  "rules": {
    "ban-councillor-typo/ban-councillor-typo": ["error"],
    "comma-dangle": ["error", "always-multiline"],
    "no-restricted-imports": [
      "error",
      {
        "patterns": [".*"],
        "paths": [
          {
            "name": "pg",
            "message": "Please use postgres instead."
          },
          {
            "name": "@/database/generatedDbTypes",
            "message": "Please use @/database/allDbTypes instead."
          },
          {
            "name": "slugify",
            "message": "Please use @/logic/toSlug instead."
          }
        ]
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "args": "all",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_",
        "destructuredArrayIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "sql/format": [
      2,
      {
        "sqlTag": "sql"
      },
      {
        "language": "postgresql",
        "keywordCase": "upper",
        "dataTypeCase": "upper",
        "identifierCase": "lower"
      }
    ],
    "sql/no-unsafe-query": [
      2,
      {
        "sqlTag": "sql"
      }
    ],
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true
      }
    ]
  }
}
