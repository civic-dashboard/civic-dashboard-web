/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<
  string,
  bigint | number | string,
  bigint | number | string
>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export interface AgendaItem {
  address: Json | null;
  agendaCd: string;
  agendaItemAddress: Json | null;
  agendaItemId: number;
  agendaItemRecommendation: string | null;
  agendaItemSummary: string;
  agendaItemTitle: string;
  backgroundAttachmentId: Json | null;
  councilAgendaItemId: number;
  decisionAdvice: string | null;
  decisionBodyId: number;
  decisionBodyName: string;
  decisionRecommendations: string | null;
  geoLocation: Json | null;
  id: Generated<string>;
  itemProcessId: number;
  itemStatus: string;
  meetingDate: Int8;
  meetingId: number;
  meetingNumber: string;
  neighbourhoodId: Json | null;
  planningApplicationNumber: string | null;
  reference: string;
  subjectTerms: string;
  termId: number;
  termYear: string;
  wardId: Json | null;
}

export interface RawContacts {
  addressLine1: string | null;
  addressLine2: string | null;
  contactName: string;
  contactSlug: string;
  email: string;
  fax: string | null;
  inputRowNumber: Int8;
  locality: string | null;
  personalWebsite: string | null;
  phone: string | null;
  photoUrl: string | null;
  postalCode: string | null;
  primaryRole: string;
  province: string | null;
  term: string;
  wardId: string | null;
  wardName: string | null;
  wardSlug: string | null;
  website: string | null;
}

export interface RawVotes {
  agendaItemNumber: string;
  agendaItemTitle: string;
  committeeName: string;
  committeeSlug: string;
  contactName: string;
  contactSlug: string;
  dateTime: string;
  inputRowNumber: Int8;
  motionId: string;
  motionType: string;
  movedBy: string | null;
  result: string;
  secondedBy: string[] | null;
  term: string;
  vote: string;
  voteDescription: string;
}

export interface DB {
  AgendaItem: AgendaItem;
  RawContacts: RawContacts;
  RawVotes: RawVotes;
}
