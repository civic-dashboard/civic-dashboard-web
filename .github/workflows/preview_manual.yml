name: Upload preview deployment

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to preview (from a fork or same-repo)'
        required: true

permissions:
  contents: read
  issues: write         # needed to post PR comments
  pull-requests: read
  statuses: write       # needed to set the required check

jobs:
  preview:
    name: Upload preview deployment   #
    runs-on: ubuntu-latest

    steps:
      - name: Get PR data
        id: pr
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ github.event.inputs.pr_number }}
        with:
          script: |
            const prNumber = Number(process.env.PR_NUMBER);
            const { owner, repo } = context.repo;
            const { data: pr } = await github.rest.pulls.get({ owner, repo, pull_number: prNumber });
            core.setOutput('sha', pr.head.sha);
            core.setOutput('ref', pr.head.ref);
            core.setOutput('repo_full_name', pr.head.repo.full_name);
            core.setOutput('html_url', pr.html_url);

      # Optional nice UX: show a pending check immediately
      - name: Set "Upload preview deployment" status to pending
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ steps.pr.outputs.sha }}',
              state: 'pending',
              context: 'Upload preview deployment',
              description: 'Building previewâ€¦'
            });

      - name: Checkout PR HEAD (no persisted creds)
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.pr.outputs.repo_full_name }}
          ref: ${{ steps.pr.outputs.ref }}
          persist-credentials: false
          fetch-depth: 1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-frontend-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-frontend-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci

      - name: Upload preview deployment
        id: publish
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          set -euo pipefail
          preview_upload_output=$(npm run preview-remote:worker)
          echo "$preview_upload_output"
          preview_url=$(echo "$preview_upload_output" | grep -oP '(?<=Version Preview URL: )https?://\S+' || true)
          if [ -z "$preview_url" ]; then
            echo "Failed to extract preview URL from output." >&2
            exit 1
          fi
          echo "preview_url=$preview_url" >> "$GITHUB_OUTPUT"
      
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: preview_url_comment
        with:
          issue-number: ${{ github.event.inputs.pr_number }}
          comment-author: 'github-actions[bot]'
          body-includes: Preview

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.preview_url_comment.outputs.comment-id }}
          issue-number: ${{ github.event.inputs.pr_number }}
          body: |
            :rocket: Preview URL for this PR: ${{ steps.publish.outputs.preview_url }}
          edit-mode: replace

      - name: Set "Upload preview deployment" status to success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ steps.pr.outputs.sha }}',
              state: 'success',
              context: 'Upload preview deployment',
              target_url: '${{ steps.publish.outputs.preview_url }}',
              description: 'Preview ready'
            });

      - name: Set "Upload preview deployment" status to failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ steps.pr.outputs.sha }}',
              state: 'failure',
              context: 'Upload preview deployment',
              description: 'Preview build failed'
            });